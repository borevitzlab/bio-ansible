help(
[[
{{ item.help_text }}
]])

{% if item.base is defined %}
local base = "{{ item.base }}"
{% else %}
local base = pathJoin("{{soft_dir}}", "{{ item.dir }}")
{% endif %}

{% if item.skip_bin is defined %}
local path = base
{% elif item.bin is defined %}
local path = pathJoin(base, "{{item.bin}}")
{% else %}
local path = pathJoin(base, "bin")
{% endif %}

{% if item.append is defined %}
append_path("PATH", path)
{% else %}
prepend_path("PATH", path)
{% endif %}

{% if item.include_path is defined %}
prepend_path("CPATH", pathJoin(base, "{{item.include_path}}"))
prepend_path("C_INCLUDE_PATH", pathJoin(base, "{{item.include_path}}"))
prepend_path("CPLUS_INCLUDE_PATH", pathJoin(base, "{{item.include_path}}"))
{% endif %}

{% if item.lib_path is defined %}
prepend_path("LIBRARY_PATH", pathJoin(base, "{{item.lib_path}}"))
prepend_path("LD_LIBRARY_PATH", pathJoin(base, "{{item.lib_path}}"))
prepend_path("LD_RUN_PATH", pathJoin(base, "{{item.lib_path}}"))
{% endif %}

{% if item.pkgconfig_path is defined %}
prepend_path("PKG_CONFIG_PATH", pathJoin(base, "{{item.pkgconfig_path}}"))
{% endif %}

{% if item.man_path is defined %}
prepend_path("MANPATH", pathJoin(base, "{{item.man_path}}"))
{% endif %}

{% if item.perl_path is defined %}
prepend_path("PERL5LIB", pathJoin(base, "{{item.perl_path}}"))
{% endif %}

{% if item.python_path is defined %}
prepend_path("PYTHONPATH", pathJoin(base, "{{item.python_path}}"))
{% endif %}

{% for e in item.env|default([]) %}
setenv("{{e.name}}", "{{e.value}}")
{% endfor %}

{% if item.depend is defined %}
load({{ item.depend }})
{% endif %}


{% if item.msg is defined %}
LmodMessage("{{ item.msg }}")
{% endif %}

-- On load, list binaries
if (mode() == "load" and os.getenv("LMOD_LOG")) then
  local r = capture("ls " .. path)
  LmodMessage("Loaded " .. myModuleName() .. " : " .. string.gsub(r,'\n',' '))
end

